# PIPELINE DEFINITION
# Name: monet-pipeline-convert-pt-to-ts
# Description: Pipeline that runs the Conversion between the PyTorch .pt format to TensorFlow SavedModel format.
# Inputs:
#    config_file_path: str
components:
  comp-convert-ckpt-to-ts:
    executorLabel: exec-convert-ckpt-to-ts
    inputDefinitions:
      parameters:
        config_file_path:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-convert-ckpt-to-ts:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - convert_ckpt_to_ts
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'pytorch-ignite'\
          \ 'SimpleITK' 'nibabel' 'monet-bundle' 'mlflow'  &&  python3 -m pip install\
          \ --quiet --no-warn-script-location 'kfp==2.14.3' '--no-deps' 'typing-extensions>=3.7.4,<5;\
          \ python_version<\"3.9\"' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef convert_ckpt_to_ts(config_file_path: str):    \n    import time\n\
          \    import os\n    import subprocess\n    import yaml\n\n    with open(\"\
          /mnt/Data/\"+config_file_path,\"r\") as f:\n        config_dict = yaml.safe_load(f)\n\
          \n    start = time.time()\n    subprocess.run([\"MONet_convert_ckpt_to_ts\"\
          ,\n                   \"--bundle_root\",\n                    config_dict[\"\
          bundle_config\"][\"bundle_root\"],\n                    \"--checkpoint_name\"\
          ,\n                    \"checkpoint_epoch=1000.pt\",\n                 \
          \   \"--dataset_name_or_id\",\n                   config_dict[\"dataset_name_or_id\"\
          ]])\n    end = time.time()\n    print(f\"Elapsed time: {end - start:.1f}\
          \ seconds\")\n\n"
        image: maiacloud/monet-pipeline:1.6
        resources:
          accelerator:
            count: '1'
            resourceCount: '1'
            resourceType: nvidia.com/gpu
            type: nvidia.com/gpu
          cpuLimit: 8.0
          cpuRequest: 1.0
          memoryLimit: 34.359738368
          memoryRequest: 8.589934592
          resourceCpuLimit: 8000m
          resourceCpuRequest: 1000m
          resourceMemoryLimit: 32Gi
          resourceMemoryRequest: 8Gi
pipelineInfo:
  description: Pipeline that runs the Conversion between the PyTorch .pt format to
    TensorFlow SavedModel format.
  name: monet-pipeline-convert-pt-to-ts
root:
  dag:
    tasks:
      convert-ckpt-to-ts:
        cachingOptions: {}
        componentRef:
          name: comp-convert-ckpt-to-ts
        inputs:
          parameters:
            config_file_path:
              componentInputParameter: config_file_path
        taskInfo:
          name: convert-ckpt-to-ts
  inputDefinitions:
    parameters:
      config_file_path:
        parameterType: STRING
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.3
---
platforms:
  kubernetes:
    deploymentSpec:
      executors:
        exec-convert-ckpt-to-ts:
          genericEphemeralVolume:
          - accessModes:
            - ReadWriteOnce
            mountPath: /dev/shm
            size: 2Gi
            storageClassName: local-path
            volumeName: shm
          nodeSelector:
            labels:
              kubernetes.io/hostname: maia-small-5
          pvcMount:
          - constant: shared
            mountPath: /mnt/Data
            pvcNameParameter:
              runtimeValue:
                constant: shared
